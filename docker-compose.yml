#version: '3.9'

networks:
  app-network:

services:
  sio_test:

    build:
      context: .
      args:
        USER_ID: ${USER_ID:-1000}
    ports:
      - "8337:8337"
    volumes:
      - .:/app:rw
    environment:
      APP_ENV: dev
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=utf8"
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - database
    networks:
      - app-network

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - app-network

  adminer:  ## Adminer
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: database
    depends_on:
      - database
    networks:
      - app-network

#  redis: # Optional service Redis
#    image: redis:alpine
#    ports:
#      - "6379:6379"
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 5s
#      timeout: 3s
#      retries: 3

volumes:
  database_data:
